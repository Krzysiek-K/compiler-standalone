
#include <stdio.h>
#include <stdlib.h>

#include <vector>
#include <string>
using namespace std;

//#include <base.h>
//using namespace base;


#define DBGINFO(x)      printf("%s\n",x);


class Compiler {
public:
	typedef int symb_t;

	symb_t  Compile(const char *path);

private:
	int		GetChar();
	void	Error(const char *message);
	symb_t	Parse();

	FILE	*fp_src;
	int		src_line;
	bool	was_error;

};


int bf_depth = 0;
vector<string> bf_ids;
vector<pair<int,int> > bf_vars;


int bf_ident(const char *s)
{
	for(int i=0;i<bf_ids.size();i++)
		if(bf_ids[i]==s)
			return i;
	bf_ids.push_back(s);
	return bf_ids.size()-1;
}

void bf_getsetint(int id,bool set)
{
	for(int i=bf_vars.size()-1;i>=0;i--)
		if(bf_vars[i].first==id)
		{
			int depth = bf_depth - bf_vars[i].second;
			string jmpL(depth,'<');
			string jmpR(depth,'>');

			if(set)
			{
				printf("%s[-]%s",jmpL.c_str(),jmpR.c_str());
				printf("[-%s+%s]",jmpL.c_str(),jmpR.c_str());
			}
			else
			{
				printf("%s[-%s+>+<%s]",jmpL.c_str(),jmpR.c_str(),jmpL.c_str());
				printf("%s>[-%s<+%s>]<",jmpR.c_str(),jmpL.c_str(),jmpR.c_str());
			}

			return;
		}
	printf("Undeclared variable '%s'.\n", bf_ids[id].c_str());
}

void bf_makeint(int v)
{
	v &= 0xFF;
	if(!v) return;
	char symb = '+';
	if(v>=128) v = 256-v, symb = '-';
	int bl = v, bd = 0, be = 0, l;
	for(int d=2;d*d<=v;d++)
	{
		l = d + v/d + 7 + v%d;
		if(l<bl) bl=l, bd=d, be=v/d;
		l = d + (v/d+1) + 7 + (d*(v/d+1)-v);
		if(l<bl) bl=l, bd=d, be=v/d+1;
	}
	if(bd>1)
	{
		printf(">");
		for(int i=0;i<bd;i++) printf("+");
		printf("[-<");
		for(int i=0;i<be;i++) printf("%c",symb);
		printf(">]<");
		v -= bd*be;
	}
	if(v<0) symb=((symb=='+')?'-':'+'), v=-v;
	for(int i=0;i<v;i++) printf("%c",symb);
}



Compiler::symb_t Compiler::Compile(const char *path)
{
	src_line = 1;
	fp_src = fopen(path, "rt");
	was_error = false;

	if( !fp_src )
		Error("can't open source file");

	return Parse();
}

int	Compiler::GetChar()
{
	int ch = fgetc(fp_src);
	if( ch == EOF )
		return 0;
	return ch;
}

void Compiler::Error(const char *message)
{
	printf("Error on line %d:%s.\n",src_line,message);
	was_error = true;
}

Compiler::symb_t Compiler::Parse()
{
	static const int LEXER[128][63] = {
		{   1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{   2,  -1,   2,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{   2,  -1,   2,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{   2,  -1,   2,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{   3,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // !
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // "
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // #
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // $
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // %
		{   4,  -1,  -1,  -1,  30,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // &
		{   5,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  45,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // '
		{   6,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // (
		{   7,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // )
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  46,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  46,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // *
		{   8,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // +
		{   9,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // ,
		{  10,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // -
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // .
		{  11,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  52,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // /
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 0
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 1
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 2
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 3
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 4
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 5
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 6
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 7
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 8
		{  12,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  12,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // 9
		{  13,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // :
		{  14,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // ;
		{  15,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // <
		{  16,  -1,  -1,  29,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  35,  36,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // =
		{  17,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // >
		{  18,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // ?
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // @
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // A
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // B
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // C
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // D
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // E
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // F
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // G
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // H
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // I
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // J
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // K
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // L
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // M
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // N
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // O
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // P
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // Q
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // R
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // S
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // T
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // U
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // V
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // W
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // X
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // Y
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // Z
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // [
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // ]
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // ^
		{  20,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  62,  19, }, // _
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // `
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  57,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // a
		{  21,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // b
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // c
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  37,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // d
		{  22,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  47,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  54,  55,  19,  19,  -1,  19,  19,  19,  58,  19,  19,  19,  19,  19,  19, }, // e
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  40,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  53,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // f
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // g
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  43,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // h
		{  23,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  51,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // i
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // j
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // k
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  39,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  56,  -1,  19,  19,  19,  19,  19,  19,  60,  19,  19,  19, }, // l
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // m
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  41,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // n
		{  24,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // o
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // p
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // q
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // r
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  49,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // s
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  48,  19,  19,  19,  50,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  61,  19,  19, }, // t
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  42,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  59,  19,  19,  19,  19,  19, }, // u
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // v
		{  25,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // w
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // x
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  38,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // y
		{  19,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  19,  19,  19,  19,  19,  19,  19,  -1,  -1,  32,  19,  19,  19,  19,  19,  -1,  19,  19,  19,  19,  19,  19,  19,  19,  19,  19, }, // z
		{  26,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // {
		{  27,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  44,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // |
		{  28,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // }
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, // ~
		{  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, }, //  
	};

	static const int MATCH[63] = {
		  -1,  37,   3,  32,  -1,  -1,  11,  12,  30,  13,  31,  -1,   0,  21,   9,  28,   8,  26,  20,   2,   2,   2,   2,   2,   2,   2,  14,  -1,  15,  24,  23,  -1,  -1,   4,  27,  25,  29,   2,   2,   2,  16,  34,   2,   2,  22,   1,  -1,   2,   2,   2,  10,   2,   5,   2,  19,  17,   2,   2,  18,   2,   2,   2,  36,
	};

	static const int ACTION[102][31] = {
		{   4,  -3,   6,   5,  -3,  -3,  -3,  -3,  -3,   8,  -3,   9,  10,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3, },
		{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  -1, },
		{   4,  -3,   6,   5,  -3,  -3,  -3,  -3,  -3,   8,  -3,   9,  10,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3, },
		{   0,  12,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,   0,   0,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6, },
		{  -7,  -7,  -7,  -7,  -7,  -7,  14,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7, },
		{   0,   0,   0,   0,  15,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, },
		{  19,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{   4,   0,   6,   5,   0,   0,   0,   0,   0,   8,   0,   9,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{   0,   0,   0,   0,  35,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, },
		{   0,   0,  37,   0,   0,   0,  36,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -21,  38, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, },
		{   0,   0,  39,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25,  40, -25,  41, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, },
		{ -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27,  42, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, },
		{ -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, },
		{ -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36,  43,  44,  45,  46,  47,  48, -36, -36, -36, -36, -36, -36, -36, -36, },
		{ -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39,  49,  50, -39, -39, -39, -39, -39, -39, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{ -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, },
		{ -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{   0,   0,   0,   0,  54,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8, },
		{ -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  19,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   4,  -3,   6,   5,  -3,  -3,  -3,  -3,  -3,   8,  -3,   9,  10,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{ -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, },
		{ -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, },
		{ -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, },
		{   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,   0,   0,   0,  73,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,  74,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,   0,   0,   0,  75,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, },
		{ -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, },
		{ -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, },
		{ -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{ -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, },
		{ -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{   4,   0,   6,   5,   0,   0,   0,  91,   0,   8,   0,   9,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,   0,   0,   0,  93,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, },
		{ -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, },
		{ -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, },
		{ -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26,  42, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, },
		{ -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, },
		{ -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, },
		{ -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, },
		{ -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, },
		{ -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, },
		{ -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, },
		{ -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, },
		{ -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, },
		{ -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, },
		{  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9, },
		{   4,  -3,   6,   5,  -3,  -3,  -3,  -3,  -3,   8,  -3,   9,  10,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3, },
		{ -11, -11, -11, -11, -11, -11, -11, -11, -11, -11,  96, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, },
		{   4,   0,   6,   5,   0,   0,   0,  91,   0,   8,   0,   9,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  98,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{   0,   0,   0,   0,   0,   0,   0,   0,  99,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, },
		{ -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, },
		{  29,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27,  26,  28,  31,   0,   0,   0, },
		{ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, },
		{   4,   0,   6,   5,   0,   0,   0,  91,   0,   8,   0,   9,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, },
		{ -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, },
		{ -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, },
	};

	static const int GOTO[102][18] = {
		{   1,   2,   6,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  10,   2,   6,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  15,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  16,  17,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  19,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  31,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  32,   6,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  50, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  51, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  52,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  56,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  57,  17,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  58,   2,   6,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  59,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  60,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  61,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  62,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  63,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  64,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  65,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  66,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  67,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  68,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  69,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  70,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  75,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  76,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  77,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  78,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  79,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  80,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  81,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  82,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  83,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  84,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  85,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  86,  23,  24, },
		{  -1,  -1,  -1,  87,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  88,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  89,   6,  -1,  91,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  93,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  94,   2,   6,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  89,   6,  -1,  96,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  99,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1, 100,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  20,  -1,  21,  22,  23,  24, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  89,   6,  -1, 101,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
	};

	static const char *SYMB[31] = {
		"Ident","=",";","`out","(",")",",","{","}","`if","`else","`while","`byte","?",":","||","&&","!=","==",">","<=","<",">=","+","-","!","Int","`in","Comment","_default_","",
	};

	vector<int> state_stack;
	vector<symb_t> symbol_stack;
	int next_type = -1;
	symb_t next_symb;
	string ready_chars;
	state_stack.push_back(0);
	int curpos_line = 1;
	int curpos_col = 1;

	while(1)
	{
		int LINE = curpos_line;
		int COLUMN = curpos_col;

		while(next_type<0)
		{
			int ls = 0, lpos=0;
			int best_match=-1, best_len=0;
			while(1)
			{
				int cc = 0;
				if(lpos>=(int)ready_chars.size())
				{
					cc = GetChar();
					if(cc<0 || cc>=128) cc=128-1;
					ready_chars.push_back(cc);

					curpos_col++;
					if(cc=='\n') curpos_line++, curpos_col=1;
				}
				else
					cc = ready_chars[lpos];
				lpos++;
				ls = LEXER[cc][ls];
				if(ls<0) break;
				if(MATCH[ls]>=0) best_match=MATCH[ls], best_len=ready_chars.size();
				if(cc==0) break;
			}
			string st(ready_chars.begin(),ready_chars.begin()+best_len);
			ready_chars.erase(ready_chars.begin(),ready_chars.begin()+best_len);
			if(best_len<=0) best_match=-1;
			switch(best_match)
			{
#define COMMENT	next_type = -1; st.clear();
			case    0: { next_type = 26; /*A*/ next_symb=atoi(st.c_str())&0xFF; /*B*/ } break;
			case    1: { next_type = 26; /*A*/ next_symb=st.c_str()[1]; /*B*/ } break;
			case    2: { next_type = 0; /*A*/ next_symb=bf_ident(st.c_str()); /*B*/ } break;
			case    3: { next_type = 28; /*A*/ COMMENT /*B*/ } break;
			case    4: { next_type = 28; /*A*/ COMMENT /*B*/ } break;
			case    5: { next_type = 28; /*A*/ COMMENT /*B*/ } break;
			default  : { next_type = best_match-7; /*A*/ /*B*/ } break;
#undef COMMENT
			}
		}
		int ss = ACTION[state_stack.back()][next_type];
		if(!ss) { Error("syntax error"); printf("%s\n",SYMB[next_type]); return symb_t(); }
		if(ss>0)
		{
			state_stack.push_back(ss-1);
			symbol_stack.push_back(next_symb);
			next_type = -1;
		}
		else
		{
			int nr = -1, nst;
			symb_t ns;
#define S0		ns
#define S(n)	symbol_stack[symbol_stack.size()-(nr-(n)+1)]
#define SN		nr
			switch(~ss)
			{
			case    0: { nr=   1; nst=  -1; /*C*/ S0=0; /*D*/ } break;
			case    1: { nr=   2; nst=   0; /*C*/ /*D*/ } break;
			case    2: { nr=   0; nst=   0; /*C*/ /*D*/ } break;
			case    3: { nr=   4; nst=   2; /*C*/ bf_getsetint(S(1),true); /*D*/ } break;
			case    4: { nr=   5; nst=   2; /*C*/ printf(".[-]"); /*D*/ } break;
			case    5: { nr=   1; nst=   2; /*C*/ /*D*/ } break;
			case    6: { nr=   1; nst=   1; /*C*/ /*D*/ } break;
			case    7: { nr=   3; nst=   1; /*C*/ /*D*/ } break;
			case    8: { nr=   1; nst=   4; /*C*/ /*D*/ } break;
			case    9: { nr=   3; nst=   4; /*C*/ /*D*/ } break;
			case   10: { nr=   6; nst=   1; /*C*/ printf("]"); /*D*/ } break;
			case   11: { nr=   0; nst=   5; /*C*/ printf("[[-]"); /*D*/ } break;
			case   12: { nr=   9; nst=   1; /*C*/ printf(">]<"); /*D*/ } break;
			case   13: { nr=   0; nst=   6; /*C*/ printf(">+<]>[-<"); /*D*/ } break;
			case   14: { nr=   7; nst=   1; /*C*/ printf(">+<]>]<"); /*D*/ } break;
			case   15: { nr=   0; nst=   7; /*C*/ printf(">+[-<"); /*D*/ } break;
			case   16: { nr=   0; nst=   8; /*C*/ printf("[[-]"); /*D*/ } break;
			case   17: { nr=   2; nst=   0; /*C*/ /*D*/ } break;
			case   18: { nr=   4; nst=   9; /*C*/ /*D*/ } break;
			case   19: { nr=   4; nst=   9; /*C*/ /*D*/ } break;
			case   20: { nr=   1; nst=  10; /*C*/ printf(">"); bf_vars.push_back(pair<int,int>(S(1),bf_depth)); bf_depth++; /*D*/ } break;
			case   21: { nr=   3; nst=  10; /*C*/ printf(">"); bf_vars.push_back(pair<int,int>(S(1),bf_depth)); bf_depth++; /*D*/ } break;
			case   22: { nr=   0; nst=  11; /*C*/ printf("<"); bf_vars.erase(bf_vars.end()-1); bf_depth--; /*D*/ } break;
			case   23: { nr=   7; nst=   3; /*C*/ printf(">]<"); /*D*/ } break;
			case   24: { nr=   1; nst=   3; /*C*/ /*D*/ } break;
			case   25: { nr=   4; nst=  12; /*C*/ printf("[[-]<[-]+>]<"); bf_depth--; /*D*/ } break;
			case   26: { nr=   1; nst=  12; /*C*/ /*D*/ } break;
			case   27: { nr=   4; nst=  14; /*C*/ printf("[[-]>+<]<[[-]>>[[-]<<+>>]<<]>>[-]<<"); bf_depth--; /*D*/ } break;
			case   28: { nr=   1; nst=  14; /*C*/ /*D*/ } break;
			case   29: { nr=   4; nst=  15; /*C*/ printf("[-<->]<"); bf_depth--; /*D*/ } break;
			case   30: { nr=   4; nst=  15; /*C*/ printf("[-<->]+<[[-]>-<]>[-<+>]<"); bf_depth--; /*D*/ } break;
			case   31: { nr=   4; nst=  15; /*C*/ printf("[-<[-[->>+<<]]>>[-<<+>>]<]<"); bf_depth--; /*D*/ } break;
			case   32: { nr=   4; nst=  15; /*C*/ printf("[-<[-[->>+<<]]>>[-<<+>>]<]<[->+<]+>[-<->]<"); bf_depth--; /*D*/ } break;
			case   33: { nr=   4; nst=  15; /*C*/ printf("<[->[-[->+<]]>[-<+>]<<]>[-<+>]<"); bf_depth--; /*D*/ } break;
			case   34: { nr=   4; nst=  15; /*C*/ printf("<[->[-[->+<]]>[-<+>]<<]+>[[-]<->]<"); bf_depth--; /*D*/ } break;
			case   35: { nr=   1; nst=  15; /*C*/ /*D*/ } break;
			case   36: { nr=   4; nst=  16; /*C*/ printf("[-<+>]<"); bf_depth--; /*D*/ } break;
			case   37: { nr=   4; nst=  16; /*C*/ printf("[-<->]<"); bf_depth--; /*D*/ } break;
			case   38: { nr=   1; nst=  16; /*C*/ /*D*/ } break;
			case   39: { nr=   2; nst=  17; /*C*/ printf("[[-]>+<]+>[-<->]<"); /*D*/ } break;
			case   40: { nr=   2; nst=  17; /*C*/ printf("[->+<]>[-<->]<"); /*D*/ } break;
			case   41: { nr=   1; nst=  17; /*C*/ bf_makeint(S(1)); /*D*/ } break;
			case   42: { nr=   1; nst=  17; /*C*/ bf_getsetint(S(1),false); /*D*/ } break;
			case   43: { nr=   3; nst=  17; /*C*/ /*D*/ } break;
			case   44: { nr=   3; nst=  17; /*C*/ printf(","); /*D*/ } break;
			case   45: { nr=   0; nst=  13; /*C*/ printf(">"); bf_depth++; /*D*/ } break;
			default: Error("internal error"); return symb_t();
			}
#undef S

			state_stack.erase(state_stack.end()-nr,state_stack.end());
			symbol_stack.erase(symbol_stack.end()-nr,symbol_stack.end());
			symbol_stack.push_back(ns);
			if((~ss)==0) return symbol_stack.back();
			ss = GOTO[state_stack.back()][nst];
			if(ss<0) { Error("internal error"); return symb_t(); }
			state_stack.push_back(ss);
		}
	}
}


int main()
{
	Compiler c;

	int v = c.Compile("source.src");
	printf("\nresult: %d\n", v);

#ifdef WIN32
	system("pause");
#endif

	return 0;
}
